责任链（Chain of Responsibility）

1.定义
    为了避免请求发送者与多个请求处理者耦合在一起，于是将所有的请求的处理者通过前一对象记住下一个对象的应用而连成一条链；当有请求发生时，可将请求沿着这条链传递，
直到有对象处理它为止。这种类型的设计模式属于行为型模式

责任链模式也叫职责链模式

    在责任链模式种，客户只需要将请求发送到责任链上即可，无须关心请求的处理细节和请求的传递过程，请求会自动进行传递。所以责任链将请求的发送者和请求权的处理者解偶了

2.优缺点
优点：
    * 降低了对象之间的耦合度。该模式使得一个对象无须知道到底时哪一个对象处理其请求以及链的结构，发送者和接收者也无须拥有对方的明确信息。
    * 增强了系统的可扩展性。可以根据需要增加信的请求处理类，满足开闭原则
    * 增强了给对象指派职责的灵活性。当工作流程发生变化，可以动态地改变链内的成员或者调用它们的次序，也可以动态地新增或删除责任
    * 责任链简化了对象之间的连接。每个对象只需要保持一个指向其后继者的引用，不需要保持其他所有处理者的引用，这避免了使用众多的if或者if...else语句
    * 责任分担。每个类只需要处理自己该处理的工作，不该处理的传递给下一个对象完成，明确各类的职责范围，符合类的单一职责原则

缺点：
    * 不能保证每个请求一定被处理。由于一个请求没有明确的接收者，所有不能保证它一定会被处理，该请求可能一直传到链的末端都得不到处理。
    * 对比较长的责任链，请求的处理可能涉及多个处理对象，系统的性能将受到一定影响。
    * 职责链建立的合理性要靠客户端来保证，增加了客户端的复杂性，可能会由于职责链的错误设置而导致系统出错，如可能会造成循环调用

3.结构
    * 抽象处理者（Handler）角色：
        定义一个处理请求的接口，包含抽象吹方法和一个后继连接
    * 具体处理者（Concrete Handler）角色
        实现抽象处理者的处理方法，判断能否处理本次请求，如果可以处理请求则处理，否则将该请求转给它的后继者
    * 客户类（Client）角色：
        创建处理链，并向链头的具体处理者对象提交请求，它不关心处理细节和请求的传递过程

    责任链模式的本质是解耦请求与处理，让请求在处理链种能进行传递与被处理；理解责任链模式应当理解其模式，而不是具体实现。责任链模式的督导之处是将其节点处理者组合成
了链式结构，并允许阶段自身决定是否进行请求处理或转发，相当于让请求流动起来。

示例：
请假流程：
	请假1周：班主任
	请假1月：系主任
	请假1季：校长审批
	请假1年：休学管委会审批

单链：只有请求链

双链：请求链和响应链